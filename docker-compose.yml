version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-chatbot-postgres
    environment:
      POSTGRES_DB: ai_chatbot_saas_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ai-chatbot-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-chatbot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-chatbot-network

  # Backend API Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ai-chatbot-server
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ai_chatbot_saas_dev
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_URL: redis://redis:6379
      CLIENT_URL: http://localhost:5173
    ports:
      - "3000:3000"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - ai-chatbot-network
    command: npm run dev

  # Frontend React App
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ai-chatbot-client
    environment:
      VITE_API_URL: http://localhost:3000/api/v1
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - ai-chatbot-network
    command: npm run dev

  # MailHog for email testing (development only)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ai-chatbot-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - ai-chatbot-network

volumes:
  postgres_data:
  redis_data:

networks:
  ai-chatbot-network:
    driver: bridge